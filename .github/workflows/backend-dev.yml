name: Backend CI/CD - Development

on:
  push:
    branches: [dev]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-dev.yml'
  pull_request:
    branches: [dev]
    paths:
      - 'backend/**'

env:
  NODE_VERSION: '20.x'
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: financeserver_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install Node.js dependencies
        run: npm install

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Prisma Migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/financeserver_test

      - name: Build TypeScript
        run: npm run build

      - name: Run Linter
        run: npm run lint --if-present

      - name: Run Tests
        run: npm test --if-present
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/financeserver_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret
          NODE_ENV: test

  deploy-dev:
    name: Deploy to Railway (Dev)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: bervProject/railway-deploy@main
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: be-financeServer-dev
        env:
          RAILWAY_ENVIRONMENT: development
